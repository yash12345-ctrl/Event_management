<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Dashboard - All Registrations</title>

  <script src="https://cdn.tailwindcss.com"></script>

  <script src="https://unpkg.com/feather-icons"></script>

  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background-color: #0f172a; 
      color: #cbd5e1; 
    }

    .sortable { cursor: pointer; user-select: none; transition: color 0.2s ease-in-out; }
    .sortable:hover { color: #ffffff; }
    .sortable .sort-icon { opacity: 0.5; transition: opacity 0.2s ease, transform 0.2s ease; }
    .sortable.asc .sort-icon, .sortable.desc .sort-icon { opacity: 1; }
    .sortable.desc .sort-icon { transform: rotate(180deg); }

    .pagination-btn {
      @apply inline-flex items-center justify-center w-10 h-10 rounded-md border border-slate-700 bg-slate-800 text-slate-400 transition-colors;
    }
    .pagination-btn:hover:not(:disabled) { @apply bg-slate-700 text-white; }
    .pagination-btn.active { @apply bg-indigo-600 text-white border-indigo-600; }
    .pagination-btn:disabled { @apply opacity-50 cursor-not-allowed; }

    @media (max-width: 768px) {
      table thead { display: none; }
      table, table tbody, table tr, table td { display: block; width: 100%; }
      table tr { margin-bottom: 1rem; background-color: rgba(30,41,59,0.6); border-radius: 0.75rem; padding: 1rem; }
      table td {
        padding: 0.5rem 0;
        text-align: right;
        position: relative;
        font-size: 0.95rem;
      }
      table td::before {
        content: attr(data-label);
        position: absolute;
        left: 0;
        font-weight: 600;
        color: #94a3b8;
        text-align: left;
      }
    }
  </style>
</head>
<body class="p-4 sm:p-6 lg:p-8">
  <div class="container mx-auto max-w-7xl">

    <header class="flex flex-col sm:flex-row justify-between items-center mb-6 gap-4">
      <h1 class="text-2xl sm:text-3xl font-bold text-white text-center sm:text-left">CODE FEST Registrations</h1>
      <a href="/" class="text-indigo-400 hover:text-indigo-300 transition-colors flex items-center gap-2">
        <i data-feather="arrow-left" class="w-5 h-5"></i>
        <span>Back to Live View</span>
      </a>
    </header>

    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 mb-6">
      <div class="bg-slate-800/50 p-6 rounded-xl border border-slate-700">
        <h3 class="text-sm font-medium text-slate-400">Total Registrations</h3>
        <p id="total-registrations" class="text-3xl font-bold text-white mt-2">0</p>
      </div>
      <div class="bg-slate-800/50 p-6 rounded-xl border border-slate-700">
        <h3 class="text-sm font-medium text-slate-400">Most Recent Registration</h3>
        <p id="most-recent-time" class="text-3xl font-bold text-white mt-2">-</p>
      </div>
      <div class="bg-slate-800/50 p-6 rounded-xl border border-slate-700">
        <h3 class="text-sm font-medium text-slate-400">Unique Institutions</h3>
        <p id="unique-institutions" class="text-3xl font-bold text-white mt-2">0</p>
      </div>
    </div>

    <div class="flex flex-col md:flex-row justify-between items-stretch md:items-center mb-4 gap-4">
      <div class="relative w-full md:max-w-md">
        <input type="text" id="search-input" placeholder="Search by name, email, institution..." class="w-full bg-slate-800 border border-slate-700 rounded-lg py-2 pl-10 pr-4 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-all text-white">
        <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
          <i data-feather="search" class="w-5 h-5 text-slate-500"></i>
        </div>
      </div>
      <button id="export-csv" class="bg-emerald-600 hover:bg-emerald-700 text-white font-semibold py-2 px-4 rounded-lg transition-colors duration-300 flex items-center justify-center gap-2 w-full md:w-auto">
        <i data-feather="download" class="w-5 h-5"></i>
        <span>Export to CSV</span>
      </button>
    </div>

    <main class="bg-slate-800/50 rounded-xl shadow-2xl overflow-hidden border border-slate-700">
      <div class="overflow-x-auto">
        <table class="w-full text-sm text-left">
          <thead class="bg-slate-800 border-b border-slate-700">
            <tr>
              <th class="p-4 uppercase text-slate-400 font-semibold tracking-wider sortable" data-sort="fullName">Name</th>
              <th class="p-4 uppercase text-slate-400 font-semibold tracking-wider sortable" data-sort="email">Email</th>
              <th class="p-4 uppercase text-slate-400 font-semibold tracking-wider sortable" data-sort="institution">Institution</th>
              <th class="p-4 uppercase text-slate-400 font-semibold tracking-wider">Reg. ID</th>
              <th class="p-4 uppercase text-slate-400 font-semibold tracking-wider sortable asc" data-sort="registeredAt">Registered At <i data-feather="arrow-down" class="inline-block ml-1 w-4 h-4 sort-icon"></i></th>
            </tr>
          </thead>
          <tbody id="registrations-tbody" class="divide-y divide-slate-700/50">
          </tbody>
        </table>
      </div>
    </main>

    <footer id="pagination-controls" class="flex flex-col sm:flex-row justify-between items-center mt-6 gap-4"></footer>
  </div>

  <script id="initial-data" type="application/json">
    <%- JSON.stringify(registrations) %>
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const App = {
        state: {
          registrations: [],
          filteredData: [],
          currentPage: 1,
          itemsPerPage: 10,
          sortKey: 'registeredAt',
          sortOrder: 'asc',
        },
        elements: {
          tbody: document.getElementById('registrations-tbody'),
          searchInput: document.getElementById('search-input'),
          exportBtn: document.getElementById('export-csv'),
          paginationControls: document.getElementById('pagination-controls'),
          totalRegs: document.getElementById('total-registrations'),
          mostRecent: document.getElementById('most-recent-time'),
          uniqueInsts: document.getElementById('unique-institutions'),
        },
        init() {
          this.loadInitialData();
          this.addEventListeners();
          this.sortData();
          this.render();
          feather.replace();
        },
        loadInitialData() {
          try {
            const raw = JSON.parse(document.getElementById('initial-data').textContent || '[]');
            this.state.registrations = raw.map(r => ({ ...r, registeredAt: new Date(r.registeredAt) }));
            this.state.filteredData = [...this.state.registrations];
          } catch { this.state.registrations = []; this.state.filteredData = []; }
        },
        addEventListeners() {
          this.elements.searchInput.addEventListener('input', this.debounce(this.handleSearch.bind(this), 300));
          this.elements.exportBtn.addEventListener('click', this.exportToCSV.bind(this));
          document.querySelectorAll('.sortable').forEach(h => h.addEventListener('click', () => this.handleSort(h.dataset.sort)));
        },
        debounce(func, delay) { let t; return (...a) => { clearTimeout(t); t=setTimeout(()=>func.apply(this,a),delay);} },
        handleSearch(e) {
          const s = e.target.value.toLowerCase();
          this.state.filteredData = this.state.registrations.filter(r =>
            r.fullName.toLowerCase().includes(s) || r.email.toLowerCase().includes(s) || r.institution.toLowerCase().includes(s));
          this.state.currentPage=1; this.sortData(); this.render();
        },
        handleSort(k) {
          if (this.state.sortKey===k) this.state.sortOrder=this.state.sortOrder==='asc'?'desc':'asc';
          else { this.state.sortKey=k; this.state.sortOrder='asc'; }
          this.sortData(); this.render();
        },
        sortData() {
          this.state.filteredData.sort((a,b)=>{
            let A=a[this.state.sortKey],B=b[this.state.sortKey];
            let c=0; if(A>B)c=1; else if(A<B)c=-1;
            return this.state.sortOrder==='desc'?c*-1:c;
          });
        },
        exportToCSV() {
          const h=["Full Name","Email","Phone Number","Institution","Registration ID","Registered At"];
          const rows=this.state.filteredData.map(r=>[`"${r.fullName}"` ,`"${r.email}"`,`"${r.phone}"`,`"${r.institution}"`,`"${r.registrationId}"`,`"${r.registeredAt.toISOString()}"`].join(','));
          const csv="data:text/csv;charset=utf-8,"+[h.join(','),...rows].join('\n');
          const link=document.createElement("a"); link.href=encodeURI(csv); link.download="techwave_registrations.csv"; document.body.appendChild(link); link.click(); link.remove();
        },
        render() { this.renderStats(); this.renderTable(); this.renderPagination(); this.updateSortHeaders(); feather.replace(); },
        renderStats() {
          const t=this.state.registrations.length; this.elements.totalRegs.textContent=t;
          if(t>0){ const mr=new Date(Math.max(...this.state.registrations.map(r=>r.registeredAt))); this.elements.mostRecent.textContent=mr.toLocaleDateString(); const u=new Set(this.state.registrations.map(r=>r.institution)).size; this.elements.uniqueInsts.textContent=u; }
        },
        renderTable() {
          this.elements.tbody.innerHTML='';
          if(this.state.filteredData.length===0){ this.elements.tbody.innerHTML='<tr><td colspan="5" class="text-center p-12 text-slate-500">No registrations found.</td></tr>'; return; }
          const s=(this.state.currentPage-1)*this.state.itemsPerPage, e=s+this.state.itemsPerPage, page=this.state.filteredData.slice(s,e);
          page.forEach(r=>{
            const tr=document.createElement('tr'); tr.className='hover:bg-slate-700/50 transition-colors';
            tr.innerHTML=`
              <td class="p-4 font-medium text-white" data-label="Name">${r.fullName}</td>
              <td class="p-4 text-slate-400" data-label="Email">${r.email}</td>
              <td class="p-4 text-slate-400" data-label="Institution">${r.institution}</td>
              <td class="p-4 text-slate-500 font-mono text-xs" data-label="Reg. ID">${r.registrationId}</td>
              <td class="p-4 text-slate-400" data-label="Registered At">${r.registeredAt.toLocaleString()}</td>`;
            this.elements.tbody.appendChild(tr);
          });
        },
        renderPagination() {
          const tp=Math.ceil(this.state.filteredData.length/this.state.itemsPerPage); this.elements.paginationControls.innerHTML=''; if(tp<=1)return;
          const s=(this.state.currentPage-1)*this.state.itemsPerPage+1, e=Math.min(s+this.state.itemsPerPage-1,this.state.filteredData.length);
          const info=document.createElement('div'); info.className='text-sm text-slate-400'; info.textContent=`Showing ${s} to ${e} of ${this.state.filteredData.length} results`;
          const box=document.createElement('div'); box.className='flex items-center gap-2';
          const prev=document.createElement('button'); prev.className='pagination-btn'; prev.innerHTML='<i data-feather="chevron-left" class="w-5 h-5"></i>'; prev.disabled=this.state.currentPage===1; prev.onclick=()=>{this.state.currentPage--;this.render();}; box.appendChild(prev);
          for(let i=1;i<=tp;i++){const b=document.createElement('button'); b.className='pagination-btn'; b.textContent=i; if(i===this.state.currentPage)b.classList.add('active'); b.onclick=()=>{this.state.currentPage=i;this.render();}; box.appendChild(b);}
          const next=document.createElement('button'); next.className='pagination-btn'; next.innerHTML='<i data-feather="chevron-right" class="w-5 h-5"></i>'; next.disabled=this.state.currentPage===tp; next.onclick=()=>{this.state.currentPage++;this.render();}; box.appendChild(next);
          this.elements.paginationControls.appendChild(info); this.elements.paginationControls.appendChild(box);
        },
        updateSortHeaders(){ document.querySelectorAll('.sortable').forEach(h=>{h.classList.remove('asc','desc'); if(h.dataset.sort===this.state.sortKey)h.classList.add(this.state.sortOrder);}); }
      }; App.init();
    });
  </script>
</body>
</html>
